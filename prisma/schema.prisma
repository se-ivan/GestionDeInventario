// 1. Configuración de la conexión a la base de datos
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 2. Generador del Cliente de Prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

// 3. Modelos de Datos

model User {
  id         Int      @id @default(autoincrement())
  nombre     String
  email      String   @unique
  password   String
  rol        String   
  createdAt  DateTime @default(now()) @map("created_at")

  // --- Relación con Sucursal ---
  sucursalId Int?     @map("sucursal_id")
  sucursal   Sucursal? @relation(fields: [sucursalId], references: [id])

  @@map("users")
}

model Book {
  id              Int          @id @default(autoincrement())
  isbn            String?      
  titulo          String
  autor           String
  precio          Decimal      @db.Decimal(10, 2)
  editorial       String?
  coleccion       String?
  anioPublicacion Int?         @map("anio_publicacion")
  genero          String?
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")
  inventario      Inventario[]
  saleDetails     SaleDetail[]

  @@index([titulo])
  @@map("books")
}

model Inventario {
  bookId     Int      @map("book_id")
  book       Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  sucursalId Int      @map("sucursal_id")
  sucursal   Sucursal @relation(fields: [sucursalId], references: [id], onDelete: Cascade)
  stock      Int      @default(0)

  @@id([bookId, sucursalId])
  @@map("inventario")
}

model Sucursal {
  id         Int        @id @default(autoincrement())
  nombre     String     @unique
  direccion  String?
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")

  // Relación
  inventario Inventario[]
  users      User[]
  @@map("sucursales")
  
}

model Sale {
  id         Int        @id @default(autoincrement())
  fecha      DateTime   @default(now())
  montoTotal Decimal    @map("monto_total") @db.Decimal(10, 2)
  createdAt  DateTime   @default(now()) @map("created_at")

  // Relación
  details    SaleDetail[]

  @@index([fecha])
  @@map("sales")
}

model SaleDetail {
  id              Int      @id @default(autoincrement())
  cantidadVendida Int      @map("cantidad_vendida")
  precioUnitario  Decimal  @map("precio_unitario") @db.Decimal(10, 2)
  subtotal        Decimal  @db.Decimal(10, 2)
  createdAt       DateTime @default(now()) @map("created_at")

  // Relaciones
  saleId          Int      @map("sale_id")
  sale            Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
  bookId          Int      @map("book_id")
  book            Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)

  @@map("sale_details")
}